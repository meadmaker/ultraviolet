--- 
name: iLife 05
line: 
  begin: ""
  end: ""
filter: CGI.escapeHTML( @escaped )
document: 
  begin: |
    <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
    <html xmlns="http://www.w3.org/1999/xhtml" lang="en">
    
    <head>
      <meta http-equiv="content-type" content="text/html; charset=iso-8859-1" />
      <meta http-equiv="cache-control" content="no-cache" />
      <meta http-equiv="expires" content="3600" />
      <meta name="revisit-after" content="2 days" />
      <meta name="robots" content="index,follow" />
      <meta name="publisher" content="Dichodaemon" />
      <meta name="copyright" content="Dichodaemon" />
    
      <meta name="author" content="Dichodaemon" />
      <meta name="distribution" content="global" />
      <meta name="description" content="Ocatarinetabellachithchix" />
      <meta name="keywords" content="arzaversperia flexilimosos toves" />
      <link rel="stylesheet" type="text/css" media="screen,projection,print" href="css/ilife_05.css" />
      <title>ilife_05</title>
    
    </head>
    
    <body>

  end: "  <p>\n    <a href=\"http://validator.w3.org/check?uri=referer\">\n      <img style=\"border:0\"\n           src=\"http://www.w3.org/Icons/valid-xhtml10\"\n           alt=\"Valid XHTML 1.0 Strict\" height=\"31\" width=\"88\" />\n    </a>\n    <a href=\"http://jigsaw.w3.org/css-validator/check?uri=referer\">\n      <img style=\"border:0;width:88px;height:31px\"\n           src=\"http://jigsaw.w3.org/css-validator/images/vcss\" \n           alt=\"Valid CSS!\" />\n    </a>\n  </p>\n\
    </body>\n\
    </html>\n"
tags: 
- begin: <span class="Text">
  end: </span>
  selector: text
- begin: <span class="Source">
  end: </span>
  selector: source -meta.source.embedded
- begin: <span class="MetaSourceEmbedded">
  end: </span>
  selector: meta.source.embedded
- begin: <span class="MetaSourceEmbeddedSource">
  end: </span>
  selector: meta.source.embedded source
- begin: <span class="MetaSourceEmbeddedBound">
  end: </span>
  selector: meta.source.embedded.bound
- begin: <span class="MetaSourceEmbeddedReturnValue">
  end: </span>
  selector: meta.source.embedded.return-value
- begin: <span class="StringInterpolated">
  end: </span>
  selector: string.interpolated
- begin: <span class="HtmlTags">
  end: </span>
  selector: meta.tag, declaration.tag
- begin: <span class="TagName">
  end: </span>
  selector: entity.name.tag
- begin: <span class="TagAttribute">
  end: </span>
  selector: entity.other.attribute-name
- begin: <span class="TagAttributeValue">
  end: </span>
  selector: meta.tag string -(text source), declaration.tag string -(text source)
- begin: <span class="StringSource">
  end: </span>
  selector: meta.tag string &(text source), declaration.tag string &(text source), source string source
- begin: <span class="SourceRubyEmbeddedSource">
  end: </span>
  selector: source string source
- begin: <span class="Comment">
  end: </span>
  selector: comment
- begin: <span class="String">
  end: </span>
  selector: string
- begin: <span class="StringSourceString">
  end: </span>
  selector: String Source String, meta.tag string source string
- begin: <span class="Number">
  end: </span>
  selector: constant.numeric
- begin: <span class="BuiltInConstant">
  end: </span>
  selector: constant.language
- begin: <span class="UserDefinedConstant">
  end: </span>
  selector: constant.character, constant.other
- begin: <span class="ConstantCharacterConstantOther">
  end: </span>
  selector: text source constant.character, text source constant.other
- begin: <span class="Variable">
  end: </span>
  selector: variable.language, variable.other, variable
- begin: <span class="Keyword">
  end: </span>
  selector: keyword
- begin: <span class="Keyword1">
  end: </span>
  selector: text source keyword
- begin: <span class="Storage">
  end: </span>
  selector: storage
- begin: <span class="ClassName">
  end: </span>
  selector: entity.name.class
- begin: <span class="InheritedClass">
  end: </span>
  selector: entity.other.inherited-class
- begin: <span class="SupportFunction">
  end: </span>
  selector: support.function
- begin: <span class="FunctionName">
  end: </span>
  selector: entity.name.function, storage.type.function
- begin: <span class="MetaPropertyFunction">
  end: </span>
  selector: meta.property.function, meta.function
- begin: <span class="FunctionArgument">
  end: </span>
  selector: variable.parameter.function
- begin: <span class="LibraryFunction">
  end: </span>
  selector: support.function
- begin: <span class="LibraryConstant">
  end: </span>
  selector: support.constant
- begin: <span class="LibraryClassType">
  end: </span>
  selector: support.type, support.class
- begin: <span class="LibraryVariable">
  end: </span>
  selector: support.other.variable
- begin: <span class="Invalid">
  end: </span>
  selector: invalid
- begin: <span class="SupportClass">
  end: </span>
  selector: support.class
- begin: <span class="SupportClassCollection">
  end: </span>
  selector: support.class.collection
- begin: <span class="MetaRoundBrackets1">
  end: </span>
  selector: meta.round-brackets, meta.property-list, comment.block.conditional
- begin: <span class="MetaRoundBrackets2">
  end: </span>
  selector: " meta.round-brackets meta.round-brackets, comment.block.conditional comment.block.conditional"
- begin: <span class="MetaRoundBrackets3">
  end: </span>
  selector: " meta.round-brackets meta.round-brackets meta.round-brackets,  comment.block.conditional comment.block.conditional comment.block.conditional"
- begin: <span class="MetaRoundBrackets4">
  end: </span>
  selector: " meta.round-brackets meta.round-brackets meta.round-brackets meta.round-brackets,  comment.block.conditional comment.block.conditional comment.block.conditional comment.block.conditional"
- begin: <span class="MetaRoundBrackets5">
  end: </span>
  selector: " meta.round-brackets meta.round-brackets meta.round-brackets meta.round-brackets meta.round-brackets,  comment.block.conditional comment.block.conditional comment.block.conditional comment.block.conditional comment.block.conditional"
- begin: <span class="MetaRoundBrackets6">
  end: </span>
  selector: " meta.round-brackets meta.round-brackets meta.round-brackets meta.round-brackets meta.round-brackets meta.round-brackets,  comment.block.conditional comment.block.conditional comment.block.conditional comment.block.conditional comment.block.conditional comment.block.conditional"
- begin: <span class="TextPlain">
  end: </span>
  selector: text.plain
- begin: <span class="SpecialSeperator">
  end: </span>
  selector: keyword.other.go.sql
- begin: <span class="MetaLeadingSpace">
  end: </span>
  selector: meta.leading-space
- begin: <span class="SourceCss">
  end: </span>
  selector: source.css
- begin: <span class="MetaPropertyValueCss">
  end: </span>
  selector: meta.property-value.css
- begin: <span class="SupportConstantPropertyValueCss">
  end: </span>
  selector: support.constant.property-value.css
listing: 
  begin: <pre class="ilife_05">
  end: </pre>
line-numbers: 
  begin: <span class="line-numbers">
  end: </span>
diff:
  add-begin: <span class="DiffLineAdd">
  add-end: </span>
  change-begin: <span class="DiffLineChange">
  change-end: </span>
  delete-begin: <span class="DiffLineDelete">
  delete-end: </span>
  missing: <span class="DiffLineMissing">     </span>

