--- 
name: Monokai for Textmaters CUSTOM
line: 
  begin: ""
  end: ""
filter: CGI.escapeHTML( @escaped )
document: 
  begin: |
    <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
    <html xmlns="http://www.w3.org/1999/xhtml" lang="en">
    
    <head>
      <meta http-equiv="content-type" content="text/html; charset=iso-8859-1" />
      <meta http-equiv="cache-control" content="no-cache" />
      <meta http-equiv="expires" content="3600" />
      <meta name="revisit-after" content="2 days" />
      <meta name="robots" content="index,follow" />
      <meta name="publisher" content="Dichodaemon" />
      <meta name="copyright" content="Dichodaemon" />
    
      <meta name="author" content="Dichodaemon" />
      <meta name="distribution" content="global" />
      <meta name="description" content="Ocatarinetabellachithchix" />
      <meta name="keywords" content="arzaversperia flexilimosos toves" />
      <link rel="stylesheet" type="text/css" media="screen,projection,print" href="css/monokai_for_textmaters_custom.css" />
      <title>monokai_for_textmaters_custom</title>
    
    </head>
    
    <body>

  end: "  <p>\n    <a href=\"http://validator.w3.org/check?uri=referer\">\n      <img style=\"border:0\"\n           src=\"http://www.w3.org/Icons/valid-xhtml10\"\n           alt=\"Valid XHTML 1.0 Strict\" height=\"31\" width=\"88\" />\n    </a>\n    <a href=\"http://jigsaw.w3.org/css-validator/check?uri=referer\">\n      <img style=\"border:0;width:88px;height:31px\"\n           src=\"http://jigsaw.w3.org/css-validator/images/vcss\" \n           alt=\"Valid CSS!\" />\n    </a>\n  </p>\n\
    </body>\n\
    </html>\n"
tags: 
- begin: <span class="MonokaiForTextmatersCustom">
  end: </span>
  selector: theme.credits
- begin: <span class="OriginalByMonokaiNl">
  end: </span>
  selector: theme.credits
- begin: <span class="CustomByDieneuemodernCom">
  end: </span>
  selector: theme.credits
- begin: <span class="Comment">
  end: </span>
  selector: comment
- begin: <span class="HtmlTag">
  end: </span>
  selector: meta.tag, declaration.tag
- begin: <span class="QuotedString">
  end: </span>
  selector: string.quoted
- begin: <span class="String">
  end: </span>
  selector: string
- begin: <span class="Regexp">
  end: </span>
  selector: string.regexp.classic
- begin: <span class="RegexpBrackets">
  end: </span>
  selector: punctuation.definition.character-class, punctuation.definition.arbitrary-repitition, punctuation.section.embedded.ruby
- begin: <span class="Number">
  end: </span>
  selector: constant.numeric
- begin: <span class="BuiltInConstant">
  end: </span>
  selector: constant.language
- begin: <span class="UserDefinedConstant">
  end: </span>
  selector: constant.character, constant.other
- begin: <span class="OtherConstant">
  end: </span>
  selector: variable.other.constant.ruby
- begin: <span class="Variable">
  end: </span>
  selector: variable
- begin: <span class="Keyword">
  end: </span>
  selector: keyword
- begin: <span class="Storage">
  end: </span>
  selector: storage
- begin: <span class="StorageType">
  end: </span>
  selector: storage.type
- begin: <span class="ClassName">
  end: </span>
  selector: entity.name.class
- begin: <span class="InheritedClass">
  end: </span>
  selector: entity.other.inherited-class
- begin: <span class="Extends">
  end: </span>
  selector: storage.modifier.extends
- begin: <span class="FunctionName">
  end: </span>
  selector: entity.name.function
- begin: <span class="FunctionStorageName">
  end: </span>
  selector: storage.type.function
- begin: <span class="FunctionArgument">
  end: </span>
  selector: variable.parameter
- begin: <span class="TagName">
  end: </span>
  selector: entity.name.tag
- begin: <span class="TagAttribute">
  end: </span>
  selector: entity.other.attribute-name
- begin: <span class="LibraryFunction">
  end: </span>
  selector: support.function
- begin: <span class="LibraryConstant">
  end: </span>
  selector: support.constant
- begin: <span class="LibraryClassType">
  end: </span>
  selector: support.type, support.class
- begin: <span class="LibraryVariable">
  end: </span>
  selector: support.other.variable
- begin: <span class="Invalid">
  end: </span>
  selector: invalid
- begin: <span class="InvalidDeprecated">
  end: </span>
  selector: invalid.deprecated
- begin: <span class="BooleanFalse">
  end: </span>
  selector: constant.language.boolean.false,constant.language.boolean.false.actionscript
- begin: <span class="BooleanTrue">
  end: </span>
  selector: constant.language.boolean.true, constant.language.boolean.true.actionscript
- begin: <span class="EmbeddedSource">
  end: </span>
  selector: source.js.embedded, source.php.embedded.block, source.ruby.embedded, source.css.embedded, source.ruby, source.js, source.actionscript
- begin: <span class="Css">
  end: </span>
  selector: source.css
- begin: <span class="RoundBraces">
  end: </span>
  selector: meta.brace.round
- begin: <span class="CssSelector">
  end: </span>
  selector: meta.property-list.css
- begin: <span class="RubyVariableOtherReadwriteInstanceRuby">
  end: </span>
  selector: variable.other.readwrite.instance.ruby
- begin: <span class="RubyBeforeVariable">
  end: </span>
  selector: punctuation.definition.variable.ruby
- begin: <span class="SourceRubyEmbeddedSource">
  end: </span>
  selector: source.ruby.embedded.source
- begin: <span class="Xml">
  end: </span>
  selector: text.xml
- begin: <span class="CssImport">
  end: </span>
  selector: keyword.control.at-rule.import.css
- begin: <span class="CssId">
  end: </span>
  selector: entity.other.attribute-name.id.css
- begin: <span class="CssClass">
  end: </span>
  selector: entity.other.attribute-name.class.css
- begin: <span class="CssTag">
  end: </span>
  selector: entity.name.tag.css
- begin: <span class="CssWildcard">
  end: </span>
  selector: entity.name.tag.wildcard.css
- begin: <span class="CssPseudoClass">
  end: </span>
  selector: entity.other.attribute-name.pseudo-class.css,attribute-name.pseudo-class, entity.other.attribute-name.tag.pseudo-class
- begin: <span class="Css1">
  end: </span>
  selector: punctuation.terminator.rule.css
- begin: <span class="AsClass">
  end: </span>
  selector: meta.class.actionscript
- begin: <span class="AsFunctionS">
  end: </span>
  selector: punctuation.definition.parameters.begin.actionscript,punctuation.definition.parameters.end.actionscript
- begin: <span class="Php">
  end: </span>
  selector: source.php
- begin: <span class="PhpTag">
  end: </span>
  selector: punctuation.section.embedded.php
- begin: <span class="PhpVariable">
  end: </span>
  selector: variable.other.php
- begin: <span class="PhpVariable1">
  end: </span>
  selector: punctuation.definition.variable.php
- begin: <span class="PhpPeriodKeyword">
  end: </span>
  selector: keyword.operator.string.php
- begin: <span class="Markdown">
  end: </span>
  selector: text.html.markdown
- begin: <span class="MarkdownHeading1">
  end: </span>
  selector: markup.heading.1.markdown
- begin: <span class="MarkdownHeading2">
  end: </span>
  selector: markup.heading.2.markdown
- begin: <span class="MarkdownLink">
  end: </span>
  selector: meta.link.inline.markdown
- begin: <span class="MarkdownHardLineBreak">
  end: </span>
  selector: meta.dummy.line-break
listing: 
  begin: <pre class="monokai_for_textmaters_custom">
  end: </pre>
line-numbers: 
  begin: <span class="line-numbers">
  end: </span>
diff:
  add-begin: <span class="DiffLineAdd">
  add-end: </span>
  change-begin: <span class="DiffLineChange">
  change-end: </span>
  delete-begin: <span class="DiffLineDelete">
  delete-end: </span>
  missing: <span class="DiffLineMissing">     </span>

